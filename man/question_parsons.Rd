% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/question_parsons.R
\name{question_parsons}
\alias{question_parsons}
\title{Parsons problem question for learnr tutorials (experimental).}
\usage{
question_parsons(initial, ..., problem_type = c("base", "ggplot2",
  "tidyverse"), orientation = c("horizontal", "vertical"),
  correct = "Correct!", incorrect = "Incorrect",
  try_again = incorrect, message = NULL, post_message = NULL,
  loading = c("Loading: "), submit_button = "Give feedback",
  try_again_button = "Try Again", allow_retry = TRUE,
  random_answer_order = TRUE, options = sortable_options())
}
\arguments{
\item{initial}{Initial value of answer options. This must be a character vector.}

\item{...}{One or more answers.  Passed to \code{\link[learnr:question]{learnr::question()}}.}

\item{problem_type}{One of \code{base}, \code{ggplot2} or \code{tidyverse}, indicating the type of
problem statement.  For \code{tidyverse}, the resulting answer will
automatically append a \code{\%>\%} at the end of each answer, and for \code{ggplot2}
every line will be followed by a \code{+}.}

\item{orientation}{Either \code{horizontal} or \code{vertical}, and specifies the
layout of the components on the page.}

\item{correct}{Text to print for a correct answer (defaults to "Correct!")}

\item{incorrect}{Text to print for an incorrect answer (defaults to "Incorrect")
when \code{allow_retry} is \code{FALSE}.}

\item{try_again}{Text to print for an incorrect answer (defaults to "Incorrect")
when \code{allow_retry} is \code{TRUE}.}

\item{message}{Additional message to display along with correct/incorrect feedback.
This message is always displayed after a question submission.}

\item{post_message}{Additional message to display along with correct/incorrect feedback.
If \code{allow_retry} is \code{TRUE}, this message will only be displayed after the
correct submission.  If \code{allow_retry} is \code{FALSE}, it will produce a second
message alongside the \code{message} message value.}

\item{loading}{Loading text to display as a placeholder while the question is loaded}

\item{submit_button}{Label for the submit button. Defaults to \code{"Submit Answer"}}

\item{try_again_button}{Label for the try again button. Defaults to \code{"Submit Answer"}}

\item{allow_retry}{Allow retry for incorrect answers. Defaults to \code{FALSE}.}

\item{random_answer_order}{Display answers in a random order.}

\item{options}{Extra options to be stored in the question object.}
}
\description{
Add Parsons Problem tasks to your \code{learnr} tutorials.  The
student can drag-and-drop the answer options into the desired order.

This is a highly experimental, initial attempt at making Parsons problems in
\code{learnr} tutorials.  Parsons problems is a type of programming assignment
where the student must order statements in the correct order.

If the task also includes indentation of the statements, it's called a
second-order Parsons problem. Note that second order problems have not yet
been implemented.

\if{html}{\figure{parsons_app_submit.png}{options: width="60\%" max-width="500px" alt="Figure: Parsons submit state"}}

Features (design choices):
\itemize{
\item Items (except the last) in the right hand column will have a \code{\%>\%}
appended.
\item Items (except the first) in the right hand column will automatically be
indented.
\item The initial values are shuffled into random answer order.
}

Limitations:
\itemize{
\item It does not do any code evaluation
\item It does not support indentation
\item It assumes code is from the \code{tidyverse} and only supports the \code{magrittr}
pipe \code{\%>\%} operator
}
}
\section{Creating a parsons question}{


Use \code{question_parsons} inside a \code{learnr} tutorial chunk

For example:\preformatted{```{r iris}
question_parsons(
 initial = c(
  "iris",
  "mutate(...)",
  "summarize(...)",
  "print()"
 ),
 answer(c(
  "iris",
   "mutate(...)",
  "summarize(...)"
  ), correct = TRUE)
)
```
}

On initialization, the initial values are randomized:

\if{html}{\figure{parsons_app_initial.png}{options: width="60\%" max-width="500px" alt="Figure: Parsons initial state"}}

As the student drags values to the right column, the \code{magrittr} gets
appended, and items are automatically indented:

\if{html}{\figure{parsons_app_submit.png}{options: width="60\%" max-width="500px" alt="Figure: Parsons submit state"}}
}

\examples{
## Example of parsons problem inside a learn tutorial
if (interactive()) {
  learnr::run_tutorial("parsons", package = "parsons")
}
}
